definitions:
  requests.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  requests.SignUpRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      username:
        type: string
    required:
    - email
    - name
    - password
    - phone
    - username
    type: object
  responses.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  responses.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  responses.TokenResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
host: 127.0.0.1:3000
info:
  contact:
    email: jil8885@hanyang.ac.kr
    name: Jeongin Lee
  description: This is a documentation of HYUabot API.
  title: HYUabot API Documentation
  version: v1
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Login to the system
      operationId: Login
      parameters:
      - description: Username and password to login
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.TokenResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      tags:
      - Auth
  /api/v1/auth/logout:
    post:
      consumes:
      - application/json
      description: Logout from the system
      operationId: Logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      security:
      - BearerAuth: []
      - Bearer: []
      tags:
      - Auth
  /api/v1/auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh access token
      operationId: RefreshAccessToken
      parameters:
      - description: Refresh token
        in: body
        name: body
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.TokenResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      security:
      - Bearer: []
      tags:
      - Auth
  /api/v1/auth/signup:
    post:
      consumes:
      - application/json
      description: Create a inactive user
      operationId: SignUp
      parameters:
      - description: Information of user to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.SignUpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.TokenResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      tags:
      - Auth
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
